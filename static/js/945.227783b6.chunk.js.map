{"version":3,"file":"static/js/945.227783b6.chunk.js","mappings":"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","sources":["REDUX/user/selectors.js","components/BurgerModal.jsx","REDUX/calories/selectors.js","components/UserSidebar.jsx","REDUX/meals/selectors.js","REDUX/ingredients/selectors.js","components/MobileModal.jsx","pages/Diary/Diary.jsx"],"sourcesContent":["export const selectUserName = (state) => state.user.user.name;\r\nexport const selectUserCurrent = (state) => state.user.user;\r\nexport const selectErrorUser = (state) => state.user.error;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../REDUX/auth/operations\";\r\nimport { selectUserName } from \"../REDUX/user/selectors\";\r\n\r\nconst BurgerModal = () => {\r\n  const name = useSelector(selectUserName);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"w-full h-full tablet:h-full phone:h-full bg-sky-900 absolute top-[68px] phone:top-[62px] right-0 left-0 z-20 flex flex-col items-center pt-10 gap-6\">\r\n      <div className=\"tablet:hidden flex items-center justify-end gap-3 self-end pr-2 mb-10\">\r\n        <p className=\"font-bold text-xl text-slate-200\">{name}</p>\r\n        <div className=\"bg-slate-300 h-6 w-[2px]\"></div>\r\n        <button\r\n          onClick={() => dispatch(logout())}\r\n          type=\"button\"\r\n          className=\"font-bold text-xl text-slate-400 hover:text-slate-200\"\r\n        >\r\n          Exit\r\n        </button>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => navigate(\"/diary\")}\r\n        className=\"font-bold text-2xl text-slate-400 hover:text-slate-200\"\r\n      >\r\n        DIARY\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => navigate(\"/calculator\")}\r\n        className=\"font-bold text-2xl text-slate-400 hover:text-slate-200\"\r\n      >\r\n        CALCULATOR\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BurgerModal;\r\n","export const selectCalories = (state) => state.totalCalories.totalCalories;\r\nexport const selectDate = (state) => state.totalCalories.date;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../REDUX/auth/operations\";\r\nimport { selectUserName, selectUserCurrent } from \"../REDUX/user/selectors\";\r\nimport { selectCalories, selectDate } from \"../REDUX/calories/selectors\";\r\n\r\nimport { fetchCurrentUser } from \"../REDUX/user/operations\";\r\n\r\nconst UserSidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(selectUserName);\r\n  const user = useSelector(selectUserCurrent);\r\n  const caloriesTotal = useSelector(selectCalories);\r\n  const date = useSelector(selectDate);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className=\"w-2/5 flex flex-col pt-12 gap-24 bg-neutral-100 pl-8 tablet:w-full tablet:h-full tablet:pt-16 tablet:pb-16 tablet:pl-6 tablet:pr-6 phone:w-full phone:h-full phone:pt-16 phone:pb-16 phone:pl-3 phone:pr-3\">\r\n      <div className=\"flex justify-end items-center gap-3 mt-8 pr-6 tablet:hidden phone:hidden\">\r\n        <p className=\"text-sm font-bold text-slate-500\">{name}</p>\r\n        <div className=\"bg-slate-300 h-8 w-[2px] tablet:hidden phone:hidden\"></div>\r\n        <button\r\n          onClick={() => dispatch(logout())}\r\n          type=\"button\"\r\n          className=\"text-sm font-bold text-slate-400\"\r\n        >\r\n          Exit\r\n        </button>\r\n      </div>\r\n      <div className=\"flex flex-col gap-14 tablet:flex-row tablet:flex-wrap tablet:w-full\">\r\n        <div className=\"flex flex-col gap-6 tablet:w-72\">\r\n          <h3 className=\"text-base font-bold text-slate-800\">\r\n            Summary for {date}\r\n          </h3>\r\n          <div className=\"flex flex-row justify-between w-full max-w-72 tablet:w-full phone:w-full\">\r\n            <ul className=\"flex flex-col gap-2 pl-6\">\r\n              <li className=\"text-base font-thin text-slate-400\">Left</li>\r\n              <li className=\"text-base font-thin text-slate-400\">Consumed</li>\r\n              <li className=\"text-base font-thin text-slate-400\">Daily rate</li>\r\n              <li className=\"text-base font-thin text-slate-400\">\r\n                n% of normal\r\n              </li>\r\n            </ul>\r\n            <ul className=\"flex flex-col gap-2 pr-3 tablet:pr-0 phone:pr-0\">\r\n              <li className=\"text-base font-thin text-slate-400 text-end\">\r\n                {user.calories\r\n                  ? `${user.calories - caloriesTotal} kcal`\r\n                  : \"000 kcal\"}\r\n              </li>\r\n              <li className=\"text-base font-thin text-slate-400 text-end\">\r\n                {user.calories ? `${caloriesTotal} kcal` : \"000 kcal\"}\r\n              </li>\r\n              <li className=\"text-base font-thin text-slate-400 text-end\">\r\n                {user.calories ? `${user.calories} kcal` : \"000 kcal\"}\r\n              </li>\r\n              <li className=\"text-base font-thin text-slate-400 text-end\">\r\n                {user.calories\r\n                  ? `${((caloriesTotal / user.calories) * 100).toFixed(0)} %`\r\n                  : \"0 %\"}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-col gap-6\">\r\n          <h3 className=\"text-base font-bold text-slate-800\">\r\n            Food not recommended\r\n          </h3>\r\n          <ul className=\"pl-4 flex flex-col gap-1\">\r\n            <li className=\"text-base font-thin text-slate-400\">\r\n              - Highly Processed Foods\r\n            </li>\r\n            <li className=\"text-base font-thin text-slate-400\">\r\n              - Sugary Beverages\r\n            </li>\r\n            <li className=\"text-base font-thin text-slate-400\">\r\n              - Fried and Fast Foods\r\n            </li>\r\n            <li className=\"text-base font-thin text-slate-400\">\r\n              - Refined Carbohydrates\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UserSidebar;\r\n","export const selectMealsList = (state) => state.meals.meals;\r\n","export const selectIngredientsList = (state) => state.ingredients.list;\r\n","import { IoClose } from \"react-icons/io5\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addMeals } from \"../REDUX/meals/operations\";\r\nimport { selectIngredientsList } from \"../REDUX/ingredients/selectors\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst MobileModal = ({ date, onClick }) => {\r\n  const dispatch = useDispatch();\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\r\n  const ingredients = useSelector(selectIngredientsList);\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Name is required\"),\r\n    grams: Yup.number().required(\"Weight is required\"),\r\n  });\r\n\r\n  const formatDate = (date) => {\r\n    if (!date) return null;\r\n\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}.${month}.${year}`;\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setQuery(value);\r\n\r\n    const filtered = ingredients.filter((item) =>\r\n      item.title.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n\r\n    setFilteredIngredients(filtered.slice(0, 10));\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full tablet:h-full phone:h-full bg-white absolute top-[68px] phone:top-[62px] right-0 left-0 z-10 flex flex-col pt-16 gap-6 px-4\">\r\n      <IoClose\r\n        onClick={onClick}\r\n        className=\"absolute top-3 right-3 w-6 h-6 text-slate-400\"\r\n      />\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          grams: \"\",\r\n          calories: \"\",\r\n          date: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          const formattedDate = date ? formatDate(date) : null;\r\n          const filteredCalories = ingredients.filter(\r\n            (item) => item.title === values.name\r\n          );\r\n          const calories = (filteredCalories[0].calories * values.grams) / 100;\r\n          const submitValues = {\r\n            product: values.name,\r\n            weight: values.grams,\r\n            calories: calories.toFixed(0),\r\n            date: formattedDate,\r\n          };\r\n\r\n          dispatch(addMeals(submitValues));\r\n          setQuery(\"\");\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({ isSubmitting, setFieldValue }) => (\r\n          <Form className=\"flex flex-col\">\r\n            <div className=\"flex flex-col gap-8\">\r\n              <div className=\"relative\">\r\n                <Field\r\n                  value={query}\r\n                  onChange={(e) => {\r\n                    handleInputChange(e);\r\n                  }}\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  type=\"string\"\r\n                  placeholder=\"Enter product name\"\r\n                  className=\"w-full bg-transparent border-b-2 outline-none pb-2 text-slate-400 font-bold focus:text-slate-600 focus:border-slate-600 placeholder:focus:text-slate-600 hover:text-slate-600 hover:border-slate-600\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"name\"\r\n                  component=\"div\"\r\n                  className=\"absolute text-red-500\"\r\n                />\r\n                {filteredIngredients.length > 0 && (\r\n                  <ul className=\"absolute bg-white shadow-md rounded-lg mt-2 w-60 max-h-40 overflow-y-auto z-10\">\r\n                    {filteredIngredients.map((item) => (\r\n                      <li\r\n                        key={item._id}\r\n                        className=\"px-4 py-2 hover:bg-slate-100 cursor-pointer\"\r\n                        onClick={() => {\r\n                          setQuery(item.title);\r\n                          setFieldValue(\"name\", item.title);\r\n                          setFilteredIngredients([]);\r\n                        }}\r\n                      >\r\n                        {item.title}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n              <div className=\"relative\">\r\n                <Field\r\n                  id=\"grams\"\r\n                  name=\"grams\"\r\n                  type=\"number\"\r\n                  placeholder=\"Grams\"\r\n                  className=\"w-full bg-transparent border-b-2 outline-none pb-2 text-slate-400 font-bold focus:text-slate-600 focus:border-slate-600 placeholder:focus:text-slate-600 hover:text-slate-600 hover:border-slate-600\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"grams\"\r\n                  component=\"div\"\r\n                  className=\"absolute text-red-500\"\r\n                />\r\n              </div>\r\n              <button\r\n                disabled={isSubmitting}\r\n                type=\"submit\"\r\n                className=\"bg-orange-500 text-white px-20 py-3 rounded-full hover:bg-orange-600 hover:scale-105 transition-all duration-300 flex justify-center items-center\"\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport logo from \"../../images/logoSlimMom.png\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../REDUX/auth/operations\";\r\nimport { fetchIngredients } from \"../../REDUX/ingredients/operations\";\r\nimport {\r\n  fetchMeals,\r\n  addMeals,\r\n  deleteMeals,\r\n} from \"../../REDUX/meals/operations\";\r\n\r\nimport { selectMealsList } from \"../../REDUX/meals/selectors\";\r\nimport { selectUserName } from \"../../REDUX/user/selectors\";\r\nimport { selectIngredientsList } from \"../../REDUX/ingredients/selectors\";\r\nimport { setTotalCalories, setDate } from \"../../REDUX/calories/calories.Slice\";\r\n\r\nimport UserSidebar from \"../../components/UserSidebar\";\r\nimport BurgerModal from \"../../components/BurgerModal\";\r\nimport MobileModal from \"../../components/MobileModal\";\r\nimport { RxHamburgerMenu } from \"react-icons/rx\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { FaCalendarAlt } from \"react-icons/fa\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst Diary = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [isMobileOpen, setMobileOpen] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [isPhone, setIsPhone] = useState(window.innerWidth <= 425);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\r\n  const mealsList = useSelector(selectMealsList);\r\n  const name = useSelector(selectUserName);\r\n  const ingredients = useSelector(selectIngredientsList);\r\n\r\n  const validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Name is required\"),\r\n    grams: Yup.number().required(\"Weight is required\"),\r\n  });\r\n\r\n  const formatDate = (date) => {\r\n    if (!date) return null;\r\n\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const year = date.getFullYear();\r\n\r\n    return `${day}.${month}.${year}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchIngredients());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMeals());\r\n  }, [dispatch]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setQuery(value);\r\n\r\n    const filtered = ingredients.filter((item) =>\r\n      item.title.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n\r\n    setFilteredIngredients(filtered.slice(0, 10));\r\n  };\r\n\r\n  const formattedSelectedDate = formatDate(selectedDate);\r\n\r\n  const filteredMeals = mealsList.filter(\r\n    (elem) => elem.date === formattedSelectedDate\r\n  );\r\n\r\n  useEffect(() => {\r\n    const totalCalories = filteredMeals.reduce(\r\n      (acc, meal) => acc + meal.calories,\r\n      0\r\n    );\r\n    dispatch(setTotalCalories(totalCalories));\r\n  }, [filteredMeals, dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setDate(formattedSelectedDate));\r\n  }, [dispatch, formattedSelectedDate]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsPhone(window.innerWidth <= 425);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          grams: \"\",\r\n          calories: \"\",\r\n          date: \"\",\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          const formattedDate = selectedDate ? formatDate(selectedDate) : null;\r\n          const filteredCalories = ingredients.filter(\r\n            (item) => item.title === values.name\r\n          );\r\n          const calories = (filteredCalories[0].calories * values.grams) / 100;\r\n          const submitValues = {\r\n            product: values.name,\r\n            weight: values.grams,\r\n            calories: calories.toFixed(0),\r\n            date: formattedDate,\r\n          };\r\n\r\n          dispatch(addMeals(submitValues));\r\n          setQuery(\"\");\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({ isSubmitting, setFieldValue }) => (\r\n          <section className=\"screen-max-width w-full h-[100vh] overflow-auto flex tablet:flex-col phone:flex-col\">\r\n            <div className=\"w-3/5 flex flex-col pl-6 pt-12 gap-20 tablet:w-full tablet:pt-2 tablet:pl-0 tablet:gap-14 phone:w-full phone:pl-0 phone:pt-2 phone:gap-8\">\r\n              <nav className=\"flex items-baseline gap-4 tablet:justify-between tablet:pb-2 tablet:items-center tablet:border-b-2 tablet:border-slate-300 phone:justify-between phone:pb-2 phone:items-center phone:border-b-2 phone:border-slate-300\">\r\n                <img\r\n                  src={logo}\r\n                  alt=\"Website Logo\"\r\n                  width={167}\r\n                  height={66}\r\n                  className=\"tablet:h-[50px] tablet:w-auto tablet:pl-6 phone:h-[44px] phone:w-auto phone:pl-4\"\r\n                />\r\n                <div className=\"flex gap-6\">\r\n                  <div className=\"hidden tablet:flex items-center gap-3\">\r\n                    <p className=\"text-sm font-semibold text-slate-500\">\r\n                      {name}\r\n                    </p>\r\n                    <div className=\"bg-slate-300 h-6 w-[2px]\"></div>\r\n                    <button\r\n                      onClick={() => dispatch(logout())}\r\n                      type=\"button\"\r\n                      className=\"text-sm font-semibold text-slate-400\"\r\n                    >\r\n                      Exit\r\n                    </button>\r\n                  </div>\r\n                  {isModalOpen ? (\r\n                    <IoClose\r\n                      onClick={() => setModalOpen(false)}\r\n                      className=\"hidden tablet:flex phone:flex w-6 h-6 flex-shrink-0 tablet:mr-6 phone:mr-4 text-slate-600\"\r\n                    />\r\n                  ) : (\r\n                    <RxHamburgerMenu\r\n                      onClick={() => setModalOpen(true)}\r\n                      className=\"hidden tablet:flex phone:flex w-6 h-6 flex-shrink-0 tablet:mr-6 phone:mr-4 text-slate-600\"\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"flex items-center gap-7 tablet:hidden phone:hidden\">\r\n                  <span className=\"bg-slate-300 h-8 w-[2px] tablet:hidden phone:hidden\"></span>\r\n                  <div className=\"flex flex-row gap-6 h-[17px] tablet:pr-6 phone:pr-4 tablet:hidden phone:hidden pt-1\">\r\n                    <button\r\n                      onClick={() => {\r\n                        navigate(\"/diary\");\r\n                      }}\r\n                      className=\" text-sm font-bold text-slate-500\"\r\n                    >\r\n                      DIARY\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        navigate(\"/calculator\");\r\n                      }}\r\n                      className=\"text-slate-300 text-sm font-bold hover:text-slate-500 focus:text-slate-500 transition-all duration-300\"\r\n                    >\r\n                      CALCULATOR\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </nav>\r\n              <div className=\"flex flex-col gap-12 tablet:pl-6 pb-14 phone:gap-8 phone:pl-4\">\r\n                <div className=\"w-[270px] phone:w-[180px]\">\r\n                  <DatePicker\r\n                    className=\"w-full text-slate-800 text-3xl phone:text-xl font-bold placeholder:text-2xl placeholder:text-slate-800 text-center flex justify-center items-center\"\r\n                    showIcon\r\n                    icon={\r\n                      <FaCalendarAlt\r\n                        style={{\r\n                          width: isPhone ? \"20px\" : \"30px\",\r\n                          height: isPhone ? \"20px\" : \"30px\",\r\n                          top: isPhone ? \"2px\" : \"none\",\r\n                        }}\r\n                      />\r\n                    }\r\n                    selected={selectedDate}\r\n                    onChange={(date) => setSelectedDate(date)}\r\n                    dateFormat=\"dd.MM.yyyy\"\r\n                    placeholderText=\"Select a date!\"\r\n                  />\r\n                </div>\r\n                <Form className=\"flex flex-col phone:hidden\">\r\n                  <div className=\"flex flex-wrap items-center justify-between w-full max-w-[435px] tablet:pr-2 phone:w-full\">\r\n                    <div className=\"relative\">\r\n                      <Field\r\n                        value={query}\r\n                        onChange={(e) => {\r\n                          handleInputChange(e);\r\n                        }}\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        type=\"string\"\r\n                        placeholder=\"Enter product name\"\r\n                        className=\"w-60 bg-transparent border-b-2 outline-none pb-2 text-slate-400 font-bold focus:text-slate-600 focus:border-slate-600 placeholder:focus:text-slate-600 hover:text-slate-600 hover:border-slate-600\"\r\n                      />\r\n                      <ErrorMessage\r\n                        name=\"name\"\r\n                        component=\"div\"\r\n                        className=\"absolute text-red-500\"\r\n                      />\r\n                      {filteredIngredients.length > 0 && (\r\n                        <ul className=\"absolute bg-white shadow-md rounded-lg mt-2 w-60 max-h-40 overflow-y-auto z-10\">\r\n                          {filteredIngredients.map((item) => (\r\n                            <li\r\n                              key={item._id}\r\n                              className=\"px-4 py-2 hover:bg-slate-100 cursor-pointer\"\r\n                              onClick={() => {\r\n                                setQuery(item.title);\r\n                                setFieldValue(\"name\", item.title);\r\n                                setFilteredIngredients([]);\r\n                              }}\r\n                            >\r\n                              {item.title}\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"relative\">\r\n                      <Field\r\n                        id=\"grams\"\r\n                        name=\"grams\"\r\n                        type=\"number\"\r\n                        placeholder=\"Grams\"\r\n                        className=\"text-center w-20 bg-transparent border-b-2 outline-none pb-2 text-slate-400 font-bold focus:text-slate-600 focus:border-slate-600 placeholder:focus:text-slate-600 hover:text-slate-600 hover:border-slate-600\"\r\n                      />\r\n                      <ErrorMessage\r\n                        name=\"grams\"\r\n                        component=\"div\"\r\n                        className=\"absolute text-red-500\"\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      disabled={isSubmitting}\r\n                      type=\"submit\"\r\n                      className=\"bg-orange-500 text-white px-2 py-2 rounded-full hover:bg-orange-600 hover:scale-105 transition-all duration-300 flex justify-center items-center\"\r\n                    >\r\n                      <GoPlus className=\"w-8 h-8\" />\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n                <div className=\"flex flex-col h-72 w-full max-w-[570px] overflow-auto pr-4 tablet:pr-0 phone:pr-0\">\r\n                  <ul className=\"flex flex-col gap-4\">\r\n                    {filteredMeals.length > 0 ? (\r\n                      filteredMeals.map((elem) => (\r\n                        <li\r\n                          key={elem._id}\r\n                          className=\"flex flex-row gap-4 tablet:gap-2 phone:gap-2 items-end hover:border-slate-600 group h-[45px]\"\r\n                        >\r\n                          <p className=\"overflow-auto whitespace-nowrap w-full max-w-66 bg-transparent border-b-2 pb-2 text-slate-400 text-sm font-semibold tablet:text-xs phone:text-[10px] group-hover:text-slate-600 group-hover:border-slate-600\">\r\n                            {elem.product}\r\n                          </p>\r\n                          <p className=\"w-14 min-w-14 tablet:w-12 tablet:min-w-12 phone:w-10 phone:min-w-10 bg-transparent border-b-2 pb-2 text-slate-400 text-sm font-semibold tablet:text-xs phone:text-[10px] group-hover:text-slate-600 group-hover:border-slate-600 text-center\">\r\n                            {elem.weight} <span>g</span>\r\n                          </p>\r\n                          <p className=\"w-20 min-w-20 tablet:w-[70px] tablet:min-w-[70px] phone:w-[55px] phone:min-w-[55px] bg-transparent border-b-2 pb-2 text-slate-400 text-sm font-semibold tablet:text-xs phone:text-[10px] group-hover:text-slate-600 group-hover:border-slate-600 text-end\">\r\n                            {elem.calories} <span>kcal</span>\r\n                          </p>\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"group-hover:scale-125 transition-all duration-200 self-center\"\r\n                          >\r\n                            {\r\n                              <IoClose\r\n                                onClick={() => dispatch(deleteMeals(elem._id))}\r\n                                className=\"w-6 h-6 text-slate-400 phone:w-4 phone:h-4\"\r\n                              />\r\n                            }\r\n                          </button>\r\n                        </li>\r\n                      ))\r\n                    ) : (\r\n                      <p className=\"text-slate-400 text-sm font-semibold\">\r\n                        No meals available yet.\r\n                      </p>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setMobileOpen(true)}\r\n                  className=\"phoneMin:hidden self-center w-12 h-12 bg-orange-500 text-white px-2 py-2 rounded-full hover:bg-orange-600 hover:scale-105 transition-all duration-300 flex justify-center items-center\"\r\n                >\r\n                  <GoPlus className=\"w-8 h-8\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <UserSidebar></UserSidebar>\r\n          </section>\r\n        )}\r\n      </Formik>\r\n      {isModalOpen && <BurgerModal />}\r\n      {isMobileOpen && (\r\n        <MobileModal date={selectedDate} onClick={() => setMobileOpen(false)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n"],"names":["selectUserName","state","user","name","selectUserCurrent","BurgerModal","useSelector","navigate","useNavigate","dispatch","useDispatch","_jsxs","className","children","_jsx","onClick","logout","type","selectCalories","totalCalories","selectDate","date","UserSidebar","caloriesTotal","useEffect","fetchCurrentUser","calories","toFixed","selectMealsList","meals","selectIngredientsList","ingredients","list","_ref","query","setQuery","useState","filteredIngredients","setFilteredIngredients","validationSchema","Yup","required","grams","IoClose","Formik","initialValues","onSubmit","values","_ref2","resetForm","formattedDate","String","getDate","padStart","getMonth","getFullYear","formatDate","filter","item","title","submitValues","product","weight","addMeals","_ref3","isSubmitting","setFieldValue","Form","Field","value","onChange","e","target","filtered","toLowerCase","includes","slice","handleInputChange","id","placeholder","ErrorMessage","component","length","map","_id","disabled","Diary","isModalOpen","setModalOpen","isMobileOpen","setMobileOpen","selectedDate","setSelectedDate","Date","isPhone","setIsPhone","window","innerWidth","mealsList","fetchIngredients","fetchMeals","formattedSelectedDate","filteredMeals","elem","reduce","acc","meal","setTotalCalories","setDate","handleResize","addEventListener","removeEventListener","_Fragment","src","logo","alt","width","height","RxHamburgerMenu","DatePicker","showIcon","icon","FaCalendarAlt","style","top","selected","dateFormat","placeholderText","GoPlus","deleteMeals","MobileModal"],"sourceRoot":""}